trigger:
- '*'

variables:
  - group: Development
  - name: artifactName
    value: 'build-artifacts'
  - name: releasablesWorkingDirectory
    value: '$(Pipeline.Workspace)/$(artifactName)/releasables'
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  - name: isPR
    value: $[startsWith(variables['Build.SourceBranch'], 'refs/pull/')]
  - name: vmImage
    value: 'ubuntu-20.04'

stages:
- stage: 'Build'
  displayName: 'Build Earth Release'
  jobs:
  - job: 'Build'
    displayName: 'Build Earth Release'
    pool:
      vmImage: $(vmImage)

    steps:
    - task: Cache@2
      displayName: 'Website Content Cache'
      inputs:
        key: ./website-content/package-lock.json
        path: ./releasables/frontend/content

    - pwsh: ./build.ps1 -BuildNumber $(Build.BuildNumber) -BuildUrl "https://dev.azure.com/flexport-earth/Earth/_build/results?buildId=$(Build.BuildId)" -FlexportApiAccessToken=$[variables.FlexportApiAccessToken]
      displayName: 'Build Script'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info to build artifacts'
      workingDirectory: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      displayName: 'Copy releasables to build artifacts'
      inputs:
        contents: releasables/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: $(artifactName)

- template: 'azure/pipeline-templates/stage-deploy-earth.yml'
  parameters:
    deployCondition: and(succeeded(), eq(variables.isPR, 'true'))
    destroyCondition: and(succeeded(), true)
    stageName: PullRequest
    environmentNameFull: Development
    environmentNameShort: 'pr$(System.PullRequest.PullRequestNumber)'
    dependsOn: Build
    azureSubscriptionName: Development

- template: 'azure/pipeline-templates/stage-deploy-earth.yml'
  parameters:
    deployCondition: and(succeeded(), eq(variables.isMain, 'true'))
    destroyCondition: false
    stageName: Development
    environmentNameFull: Development
    environmentNameShort: dev
    dependsOn: Build
    azureSubscriptionName: Development

- template: 'azure/pipeline-templates/stage-deploy-earth.yml'
  parameters:
    deployCondition: succeeded()
    destroyCondition: false
    stageName: Staging
    environmentNameFull: Staging
    environmentNameShort: stg
    dependsOn: Development
    azureSubscriptionName: Staging

- template: 'azure/pipeline-templates/stage-deploy-earth.yml'
  parameters:
    deployCondition: succeeded()
    destroyCondition: false
    stageName: Production
    environmentNameFull: Production
    environmentNameShort: prod
    dependsOn: Staging
    azureSubscriptionName: Production
