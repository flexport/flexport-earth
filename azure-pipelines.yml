# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- '*'

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isPR: $[eq(variables['Build.Reason'], 'PullRequest')]

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'
      demands:
      - npm

    variables:
      dotnetSdkVersion: '5.x'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      displayName: 'Copy release to artifact staging'
      inputs:
        contents: deploy-earth.ps1
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      displayName: 'Copy bicep to artifact staging'
      inputs:
        contents: create-resource-group.bicep
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: 'TestPR'
  displayName: 'Deploy to a PR Environment'
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isPR, 'true'))
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-20.04'
    environment: Development
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureCLI@2
            displayName: 'Deploy'
            inputs:
              azureSubscription: 'Development'
              workingDirectory: '$(Pipeline.Workspace)/drop'
              scriptType: pscore
              arguments: '-EnvironmentName pr$(System.PullRequest.PullRequestNumber)'
              scriptPath: '$(Pipeline.Workspace)/drop/deploy-earth.ps1'

- stage: 'Dev'
  displayName: 'Deploy to the Development environment'
  dependsOn: Build
  condition: and(succeeded(), eq(variables.isMain, 'true'))
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-20.04'
    environment: Development
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureCLI@2
            displayName: 'Deploy'
            inputs:
              azureSubscription: 'Development'
              workingDirectory: '$(Pipeline.Workspace)/drop'
              scriptType: pscore
              arguments: '-EnvironmentName dev'
              scriptPath: '$(Pipeline.Workspace)/drop/deploy-earth.ps1'